---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: alertbot
  name: alertbot
spec:
  replicas: 1

  selector:
      matchLabels:
        run: alertbot

  template:
    metadata:
      labels:
        name: alertbot
        app:  alertbot
        bot:  alertbot
        run:  alertbot
        env:  prod
      annotations:
        #prometheus.io/scrape: "true"
        #prometheus.io/port: "8081"
    spec:
      restartPolicy: Always

      containers:
        - name: alertbot
          image: eu.gcr.io/wire-bot/alertbot:latest

          # nb. QoS tier "Guaranteed" (requests == limits)
          resources:
            requests: &RESOURCE_REQUESTS
              cpu:    "100m"
              memory: "200Mi"
            limits:
              <<: *RESOURCE_REQUESTS

          ports:
            - name: web
              containerPort: 8050
              protocol: TCP

            - name: admin
              containerPort: 8051
              protocol: TCP

            - name: metrics
              containerPort: 8081
              protocol: TCP

          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: alertbot-knows
                  key: token

            - name: KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: alertbot-knows
                  key: keystore_password

            - name: API_KEYS
              valueFrom:
                secretKeyRef:
                  name: alertbot
                  key: apikeys # comma separated

          volumeMounts:
            - name: alertbot-disk
              mountPath: /var/lib/alertbot/crypto

            - name: alertbot-config
              mountPath: /etc/alertbot

          command:
            - "/usr/bin/java"
            - "-javaagent:/opt/wire/lib/jmx_prometheus_javaagent.jar=8081:metrics.yaml"
            - "-Ddw.server.applicationConnectors[1].keyStorePassword=$(KEYSTORE_PASSWORD)"
            - "-Ddw.auth=$(TOKEN)"
            - "-Ddw.apiKeys=$(API_KEYS)"
            - "-jar"
            - "/opt/alertbot/alertbot.jar"
            - "server"
            - "/etc/alertbot/alertbot.yaml"

          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8081
            initialDelaySeconds: 60
            timeoutSeconds: 30
            periodSeconds: 10
            failureThreshold: 6
            successThreshold: 1

          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 8081
            initialDelaySeconds: 60
            timeoutSeconds: 15

      volumes:
        - name: alertbot-disk
          gcePersistentDisk:
            pdName: alertbot-disk
            fsType: ext4

        - name: alertbot-config
          configMap:
            name: alertbot-config

---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: alertbot
  name: alertbot
spec:
  type: LoadBalancer

  selector:
    run: alertbot

  ports:
  - name: https
    port: 443
    protocol: TCP

